name: Build ASE frontend

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    env:
      working-directory: ./web
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use Node 12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Install ChromeDriver
        run: |
          CHROME_VERSION=$(google-chrome --version | cut -f 3 -d ' ' | cut -d '.' -f 1) \
            && CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}) \
            && curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip "http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip" \
            && cd /tmp \
            && unzip chromedriver_linux64.zip \
            && rm -rf chromedriver_linux64.zip \
            && sudo mv chromedriver /usr/local/bin/chromedriver \
            && sudo chmod +x /usr/local/bin/chromedriver \
            && chromedriver --version
      - name: Install dependencies
        run: |
          npm install -g @angular/cli
          npm ci
        working-directory: ${{env.working-directory}}
      - name: Build
        run: ng build
        working-directory: ${{env.working-directory}}
      - name: Test
        run: ng test
        working-directory: ${{env.working-directory}}
#      - name: Archive build
#        if: success()
#        uses: actions/upload-artifact@v1
#        with:
#          name: deploy_dist
#          path: ${{env.working-directory}}/dist
#      - name: Archive code coverage result
#        if: success()
#        uses: actions/upload-artifact@v1
#        with:
#          name: deploy_coverage
#          path: coverage
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v1
#      - name: Download build
#        uses: actions/download-artifact@v1
#        with:
#          name: deploy_dist
#      - name: Deploy to GitHub Pages
#        uses: JamesIves/github-pages-deploy-action@releases/v3
#        with:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          BRANCH: gh-pages
#          FOLDER: deploy_dist/
